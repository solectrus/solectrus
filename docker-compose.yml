version: "3.7"

services:
  influxdb:
    restart: always
    deploy:
      update_config:
        order: stop-first
      replicas: 1
    image: quay.io/influxdb/influxdb:v2.0.3
    command: influxd run --bolt-path /var/lib/influxdb2/influxd.bolt --engine-path /var/lib/influxdb2/engine --store bolt
    volumes:
      - ${INFLUXDB_VOLUME_PATH}:/var/lib/influxdb2
    networks:
      - public
      - internal

  db:
    hostname: db.${APP_HOST}
    environment:
      - POSTGRES_PASSWORD
    networks:
      - internal
    image: postgres:13-alpine
    restart: always
    deploy:
      update_config:
        order: stop-first
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
    volumes:
      - ${DB_VOLUME_PATH}:/var/lib/postgresql/data

  redis:
    hostname: redis.${APP_HOST}
    networks:
      - internal
    image: redis:alpine
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
    deploy:
      update_config:
        order: stop-first
    volumes:
      - ${REDIS_VOLUME_PATH}:/data

  app:
    hostname: app.${APP_HOST}
    image: registry.gitlab.com/solectrus/solectrus:stable
    environment:
      - APP_HOST
      - DB_HOST=db
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_USER=postgres
      - SECRET_KEY_BASE
      - INFLUX_HOST=influxdb
      - INFLUX_SCHEMA
      - INFLUX_PORT
      - INFLUX_TOKEN
      - INFLUX_ORG
      - INFLUX_BUCKET
      - LOCKUP_CODEWORD
      - REDIS_URL
    deploy:
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
      replicas: 1
    networks:
      - public
      - internal
    links:
      - db
      - influxdb
      - redis
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 3000 || exit 1"]

networks:
  internal:
    driver_opts:
      encrypted: ""
  public:
    external: true
