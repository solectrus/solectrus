.text-gray-700.dark:text-gray-400
  div data-controller= 'select'
    select.block.lg:hidden.border-0.focus:ring-0.font-medium.rounded.text-sm[
      data-select-target= 'select'
      data-action= 'select#onChange'
      class= button_class
      name= name
    ]
      - if grouped?
        - items.each do |group|
          optgroup label= group[:name]
            - flat_items_for_group(group).each do |item|
              = render_option(item)
      - else
        - items.each do |item|
          = render_option(item)

    select.absolute.invisible.font-medium[
      data-select-target= 'temp'
      name= "#{name}-temp"
    ]
      option

  .hidden.relative.lg:inline-block.text-left data-controller="dropdown--component"
    - if button
      = button
    - else
      button#options-menu.flex.rounded-md.px-2.sm:px-4.py-2.font-medium.focus:outline-hidden.focus:ring-2.focus:ring-gray-500.dark:focus:ring-gray-700.text-sm.gap-2[
        type= 'button'
        class= button_class
        data-dropdown--component-target="button"
        data-action="click->dropdown--component#toggle"
        aria-haspopup= 'true'
        aria-expanded= 'false'
      ]
        = selected_item&.name

        svg.h-5.text-gray-400:dark:bg-gray-800[
          viewbox= '0 0 20 20'
          fill= 'currentColor'
          aria-hidden= 'true'
        ]
          path[
            clip-rule= 'evenodd'
            fill-rule= 'evenodd'
            d= 'M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z'
          ]

    .z-10.origin-top-right.absolute.w-max.right-0.mt-2.rounded-md.shadow-lg.bg-white.dark:bg-gray-700.ring-1.ring-black/5.hidden.overflow-hidden[
      data-dropdown--component-target="menu"
      data-transition-enter="transition ease-out duration-100"
      data-transition-enter-start="opacity-0 scale-95"
      data-transition-enter-end="opacity-100 scale-100"
      data-transition-leave="transition ease-in duration-75"
      data-transition-leave-start="opacity-100 scale-100"
      data-transition-leave-end="opacity-0 scale-95"
    ]
      .whitespace-nowrap aria-labelledby="options-menu" aria-orientation="vertical" role="menu"
        - if top_item
          .border-b.border-gray-200.dark:border-gray-600
            = top_item&.call(with_icon: icons?, css_extra: [extra_item_class, 'py-2 px-3 hover:bg-gray-100 dark:hover:bg-gray-800 ', top_item.current ? 'font-bold' : nil])

        - if grouped?
          div class="grid #{grid_classes} gap-x-4"
            - items.each do |group|
              - if group[:subgroups]
                - group[:subgroups].each_with_index do |subgroup, index|
                  .min-w-0
                    - if index.zero?
                      div class= group_header_class(group)
                        - if subgroups?(group)
                          div class= spanning_border_class
                        = group[:name]
                    - else
                      .px-3.py-1.text-xs.font-medium.mb-2.opacity-0 &nbsp;
                    - subgroup[:items].each do |item|
                      - unless item == top_item || item == bottom_item
                        = item.call(with_icon: icons?, css_extra: ['py-2 px-3 hover:bg-gray-100 dark:hover:bg-gray-800', item.current ? 'font-bold' : nil])
              - else
                .min-w-0
                  div class= group_header_class(group)
                    = group[:name]
                  - group[:items].each do |item|
                    - unless item == top_item || item == bottom_item
                      = item.call(with_icon: icons?, css_extra: ['py-2 px-3 hover:bg-gray-100 dark:hover:bg-gray-800', item.current ? 'font-bold' : nil])
        - else
          div class= menu_class
            - items.each do |item|
              - unless item == top_item || item == bottom_item
                = item.call(with_icon: icons?, css_extra: ['py-2 px-3 hover:bg-gray-100 dark:hover:bg-gray-800', item.current ? 'font-bold' : nil])

        - if bottom_item
          .border-t.border-gray-200.dark:border-gray-600
            = bottom_item.call(with_icon: icons?, css_extra: [extra_item_class, 'py-2 px-3 hover:bg-gray-100 dark:hover:bg-gray-800', bottom_item.current ? 'font-bold' : nil])
