= render Balance::Component.new calculator:,
                                timeframe:,
                                sensor: do |balance|

  = balance.with_center do
    - if SensorConfig.x.exists?(:autarky)
      = link_to root_path(sensor: 'autarky', timeframe:),
                data: { \
                  turbo_frame: helpers.frame_id('chart'),
                  turbo_action: 'replace',
                  turbo_prefetch: 'false',
                },
                class: 'click-animation' do
        div data-controller="tippy" data-tippy-touch-value= "true"
          = render RadialBadge::Component.new(percent: calculator.autarky, title: t('calculator.autarky'))
          - unless timeframe.future?
            template data-tippy-target="html"
              = render AutarkyDetails::Component.new(calculator:)

    - if SensorConfig.x.exists?(:self_consumption) && calculator.self_consumption_quote
      = link_to root_path(sensor: 'self_consumption', timeframe:),
                data: { \
                  turbo_frame: helpers.frame_id('chart'),
                  turbo_action: 'replace',
                  turbo_prefetch: 'false',
                },
                class: 'click-animation' do
        div data-controller="tippy" data-tippy-touch-value= "true"
          = render RadialBadge::Component.new(percent: calculator.self_consumption_quote, neutral: true, title: t('calculator.self_consumption_quote_short'))
          - unless timeframe.future?
            template data-tippy-target="html"
              = render ConsumptionDetails::Component.new(calculator:)

    div class="flex-1"

    - unless timeframe.future?
      = link_to root_path(sensor: 'co2_reduction', timeframe:),
                data: { \
                  turbo_frame: helpers.frame_id('chart'),
                  turbo_action: 'replace',
                  turbo_prefetch: 'false',
                },
                class: 'click-animation' do
        div data-controller="tippy" title= t('calculator.co2_reduction_note', co2_emission_factor: Rails.configuration.x.co2_emission_factor) data-tippy-touch-value= "true"
          = render RadialBadge::Component.new(title: t('calculator.co2_reduction')) do
            = Number::Component.new(value: calculator.co2_reduction).to_weight(klass: 'text-sky-700 dark:text-sky-400')

    = render FinanceBadge::Component.new(calculator:, timeframe:)
