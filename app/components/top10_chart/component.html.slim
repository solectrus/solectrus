- if top10_for_period.blank?
  .h-64.flex.items-center.justify-center.text-xl
    = t('.blank')

- elsif sensor == :house_power && calc.max? && SensorConfig.x.exclude_from_house_power.present?
  .h-64.flex.items-center.justify-center.text-lg.text-center
    p
      = t('.house_power_max_not_possible')

- else
  .table.w-full id= "chart-#{period}"
    - top10_for_period.each_with_index do |record, index|
      = link_to timeframe_path(record), class: 'table-row hover:bg-gray-100 dark:hover:bg-gray-900' do
        .table-cell.align-middle.p-2.tabular-nums.w-1.text-right.font-bold class= text_classes(record)
          = "#{index + 1}."
        .table-cell.align-middle.p-2.tabular-nums.w-1.whitespace-nowrap.text-left class= text_classes(record)
          = formatted_date(record[:date])
        .table-cell.align-middle.p-2
          .flex.items-center.gap-3
            .h-7.sm:h-8.rounded.flex.items-center.justify-end.bg-gradient-to-r.px-2.truncate style="width: #{percent(record)}%" class= bar_classes
              span class= value_classes_inside(record)
                = Number::Component.new(value: record[:value]).public_send(unit_method)

            span class= value_classes_outside(record)
              = Number::Component.new(value: record[:value]).public_send(unit_method)

  p.mt-5.text-slate-400.text-right.text-sm
    i.fa.fas.fa-circle-info.fa-lg.mr-2
    = note
