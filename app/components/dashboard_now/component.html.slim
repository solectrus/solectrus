.relative
  .absolute.w-full
    .grid.grid-cols-3.gap-3.md:gap-10.mt-24.h-8.md:h-16
      .transform.rotate-90
        = render Flow::Component.new value: calculator.inverter_to_wallbox, max: 10_000, signal: true

      div

      .transform.rotate-90
        = render Flow::Component.new value: calculator.grid_to_wallbox, max: 10_000, signal: false

    .flex.flex-row.items-center.-mt-10.md:mt-3
      .w-1/2.transform.rotate-180
        = render Flow::Component.new value: calculator.inverter_to_house, max: 10_000, signal: true

      - case calculator.feeding?
        - when true
          .w-1/2.transform.rotate-180
            = render Flow::Component.new value: calculator.house_to_grid, max: 10_000, signal: true
        - when false
          .w-1/2
            = render Flow::Component.new value: calculator.grid_to_house, max: 10_000, signal: false

    .grid.grid-cols-3.gap-3.md:gap-10
      .transform.-rotate-90
        = render Flow::Component.new value: calculator.inverter_to_battery, max: 10_000, signal: true

      div

      .transform.-rotate-90
        = render Flow::Component.new value: calculator.grid_to_battery, max: 10_000, signal: false

  .grid.grid-cols-1.gap-3.md:gap-y-10.text-center.text-white
    = render Card::Component.new field: 'wallbox_charge_power' do |component|
      .flex.flex-row.justify-around.items-center
        .w-1/3.pr-10
          = tag.div class: 'text-2xl md:text-4xl', **component.value_options do
            = Number::Component.new(value: calculator.wallbox_charge_power).to_kw

        .w-1/3
          = component.icon
          h1.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
            = component.title

        .w-1/3

    .grid.grid-cols-3.gap-3.md:gap-10
      = render Card::Component.new field: 'inverter_power', signal: calculator.producing? || nil, klasses: 'flex flex-col justify-center' do |component|
        = component.icon

        h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
          = component.title

        = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
          = Number::Component.new(value: calculator.inverter_power).to_kw

        h1.mt-2.text-xs.md:text-base
          br

      .grid.grid-cols-1.gap-3
        = render Card::Component.new field: 'house_power', signal: calculator.autarky == 100, klasses: 'flex flex-col justify-center' do |component|
          = component.icon

          h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
            = component.title

          = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
            = Number::Component.new(value: calculator.house_power).to_kw

          h1.mt-2.text-xs.md:text-base
            =t 'calculator.autarky'
            =< Number::Component.new(value: calculator.autarky).to_percent(max_precision: 0, klass: 'text-current')

          - component.with :tippy do
            = render partial: 'calculate_autarky'

      = render Card::Component.new field: calculator.grid_power_field, signal: calculator.feeding?, klasses: 'flex flex-col justify-center' do |component|
        = component.icon

        h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
          =t 'calculator.grid_power'

        = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
          = Number::Component.new(value: calculator.grid_power).to_kw

        h1.mt-2.text-xs.md:text-base
          br

    = render Card::Component.new field: calculator.bat_power_field, signal: !calculator.bat_empty? || nil do |component|
      .flex.flex-row.justify-around.items-center
        .w-1/3.pr-10
          = tag.div class: 'text-2xl md:text-4xl', **component.value_options do
            = Number::Component.new(value: calculator.bat_power).to_kw

        .w-1/3
          - case calculator.bat_fuel_charge
            - when 0..9
              i.fas.fa-battery-empty.fa-2x
            - when 10..40
              i.fas.fa-battery-quarter.fa-2x
            - when 41..60
              i.fas.fa-battery-half.fa-2x
            - when 61..94
              i.fas.fa-battery-three-quarters.fa-2x
            - when 95..100
              i.fas.fa-battery-full.fa-2x

          h1.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
            =t 'calculator.bat_power'

        .w-1/3.text-2xl.pl-10
          = Number::Component.new(value: calculator.bat_fuel_charge).to_percent(klass: 'text-current')
