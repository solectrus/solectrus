.flex.flex-col.gap-3.md:gap-10.text-center.text-white
  .grid.grid-cols-3.gap-3.md:gap-10
    = render Card::Component.new field: 'inverter_power', signal: calculator.producing?, klasses: 'flex flex-col justify-center' do |component|
      = component.icon

      h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
        = component.title

      = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
        = Number::Component.new(value: calculator.inverter_power).to_kw

    .flex.flex-col.gap-3
      = render Card::Component.new field: 'wallbox_charge_power', klasses: 'flex flex-col justify-center' do |component|
        = component.icon

        h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
          = component.title

        = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
          = Number::Component.new(value: calculator.wallbox_charge_power).to_kw

      = render Card::Component.new field: 'house_power', signal: calculator.autarky == 100, klasses: 'flex flex-col justify-center' do |component|
        = component.icon

        h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
          = component.title

        = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
          = Number::Component.new(value: calculator.house_power).to_kw

        h1.mt-2.text-xs.md:text-base
          =t 'calculator.autarky'
          =< Number::Component.new(value: calculator.autarky).to_percent(max_precision: 0, klass: 'text-current')

        - component.with :tippy do
          = render partial: 'calculate_autarky'

    = render Card::Component.new field: calculator.grid_power_field, signal: calculator.feeding?, klasses: 'flex flex-col justify-center' do |component|
      = component.icon

      h1.mt-2.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
        =t 'calculator.grid_power'

      = tag.div class: 'mt-5 text-2xl md:text-4xl', **component.value_options do
        = Number::Component.new(value: calculator.grid_power).to_kw

  = render Card::Component.new field: calculator.bat_power_field, signal: calculator.bat_charging?, klasses: 'flex flex-row justify-around items-center' do |component|
    .w-1/3.pr-10
      = tag.div class: 'text-2xl md:text-4xl', **component.value_options do
        = Number::Component.new(value: calculator.bat_power).to_kw

    .w-1/3
      - case calculator.bat_fuel_charge
        - when 0..9
          i.fas.fa-battery-empty.fa-2x
        - when 10..40
          i.fas.fa-battery-quarter.fa-2x
        - when 41..60
          i.fas.fa-battery-half.fa-2x
        - when 61..94
          i.fas.fa-battery-three-quarters.fa-2x
        - when 95..100
          i.fas.fa-battery-full.fa-2x

      h1.text-xs.md:text-sm.uppercase.md:tracking-wider.hidden.md:block
        =t 'calculator.bat_power'

    .w-1/3.text-2xl.pl-10
      = Number::Component.new(value: calculator.bat_fuel_charge).to_percent(klass: 'text-current')

/ .absolute.top-0.left-0.w-48.transform.rotate-45.mt-24.ml-40
/   = render Flow::Component.new direction: :left_to_right,
/                                value: calculator.inverter_power,
/                                max: 10_000

/ .absolute.top-0.right-0.w-48.transform.-rotate-45.mt-24.mr-40
/   = render Flow::Component.new direction: calculator.feeding? ? :right_to_left : :left_to_right,
/                                value: [ calculator.grid_power_plus, calculator.grid_power_minus ].max,
/                                max: 10_000

/ .absolute.bottom-0.left-0.w-48.transform.-rotate-45.mb-24.ml-40
/   = render Flow::Component.new direction: :right_to_left,
/                                value: calculator.house_power,
/                                max: 10_000

/ .absolute.bottom-0.right-0.w-48.transform.rotate-45.mb-24.mr-40
/   = render Flow::Component.new direction: calculator.bat_charging? ? :left_to_right : :right_to_left,
/                                value: [ calculator.bat_power_plus, calculator.bat_power_minus ].max,
/                                max: 10_000

/ .absolute.m-auto.bottom-0.left-0.right-0.w-44.transform.rotate-90.mb-16
/   = render Flow::Component.new direction: :left_to_right,
/                                value: calculator.wallbox_charge_power,
/                                max: 10_000
