.w-full.grid.text-xs.sm:text-sm class= 'grid-cols-[minmax(2rem,1fr)_repeat(12,minmax(1rem,1fr))] gap-0.5 sm:gap-1'
  - years.reverse_each do |year|
    .text-right.pr-1.flex.items-center.justify-end.tabular-nums.sm:pr-2
      = year

    - (1..12).each do |month|
      - if (value = value_for(year, month))
        - date = Date.new(year, month)
        = link_to root_path(sensor, timeframe: date.strftime('%Y-%m')),
                  class: ['aspect-square', background_class(value)],
                  style: "opacity: #{opacity(value)}",
                  data: { controller: 'tippy' } do
            .hidden data-tippy-target= 'html'
              strong
                = l(date, format: :month)

              - if sensor == :grid_power
                table
                  tbody
                    - grid_fields.each do |field|
                      tr
                        td.text-left.pr-2
                          - case field
                          - when :grid_revenue
                            = SensorConfig.x.display_name(:grid_export_power)
                          - when :grid_costs
                            = SensorConfig.x.display_name(:grid_import_power)
                        td.text-right.tabular-nums
                          =< Number::Component.new(value: value[field]).to_eur(negative: field == :grid_costs, precision: 0)

                  tfoot.border-t
                    tr
                      td Saldo
                      td.text-right.tabular-nums
                        = Number::Component.new(value: grid_eur_diff(value).abs).to_eur(precision: 0, negative: grid_eur_diff(value).negative?)
              - else
                = Number::Component.new(value: value).to_watt_hour
      - else
        div
  div
  - (1..12).each do |month|
    .text-center.text-xs.sm:text-sm.sm:mt-1
      = t('date.abbr_month_names')[month]
