= turbo_stream.update frame_id('nav') do
  = render Timeframe::Component.new(timeframe:)

- if timeframe.now? && SensorConfig.x.exists?(:system_status)
  = turbo_stream.update frame_id('status') do
    = render Status::Component.new time: calculator.time,
                                   status: calculator.system_status,
                                   status_ok: calculator.system_status_ok

= turbo_stream.update frame_id('stats'), method: :morph do
  - if timeframe.now?
    = render StatsNow::Component.new calculator:, sensor:
  - else
    = render StatsRange::Component.new calculator:, timeframe:, sensor:
