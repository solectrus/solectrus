ruby:
  animation_options = {
    easing: 'easeOutQuad',
    duration: 300
  }
  elements_options = {
    point: {
      radius: 0,
      hitRadius: 5,
      hoverRadius: 5
    }
  }
  tooltips_options = {
    titleFontSize: 20,
    bodyFontSize: 20
  }

  time_options = case timeframe
                 when 'now'
                   { unit: 'minute', stepSize: 1, displayFormats: { minute: 'HH:mm' }, tooltipFormat: 'HH:mm:ss' }
                 when 'day'
                   { unit: 'hour', displayFormats: { hour: 'HH:mm' }, tooltipFormat: 'HH:mm' }
                 when 'week', 'month'
                   { unit: 'day', displayFormats: { day: 'DD.MM.' }, tooltipFormat: 'dddd, DD.MM.YYYY' }
                 when 'year'
                   { unit: 'month', displayFormats: { month: 'MM-YYYY' }, tooltipFormat: 'MMMM YYYY' }
                 when 'all'
                   { unit: 'year', displayFormats: { year: 'YYYY' }, tooltipFormat: 'YYYY' }
  end

  color = case field
          when 'house_power'                         then '#D97706'
          when 'inverter_power'                      then '#FCD34D'
          when 'grid_power_plus', 'grid_power_minus' then '#9CA3AF'
          when 'bat_power_plus', 'bat_power_minus'   then '#93C5FD'
  end

= turbo_frame_tag 'charts' do
  - if timeframe.in? %w[now day]
    = area_chart chart,
                 ytitle: 'kW',
                 colors: [ color ],
                 decimal: I18n.t('number.format.separator'),
                 thousands: I18n.t('number.format.delimiter'),
                 download: true,
                 library: { \
                   animation: animation_options,
                   elements: elements_options,
                   tooltips: tooltips_options,
                   scales: { xAxes: [ { type: 'time', time: time_options } ] } \
                 }

  - else
    = column_chart chart,
                   ytitle: 'kWh',
                   colors: [ color ],
                   decimal: I18n.t('number.format.separator'),
                   thousands: I18n.t('number.format.delimiter'),
                   download: true,
                   library: { \
                     animation: animation_options,
                     elements: elements_options,
                     tooltips: tooltips_options,
                     scales: { xAxes: [ { offset: true, type: 'time', time: time_options } ] } \
                   }
